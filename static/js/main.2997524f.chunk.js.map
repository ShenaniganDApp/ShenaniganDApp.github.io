{"version":3,"sources":["Home.js","hooks/useScrollPosition.js","styles/Text.js","Header.js","styles/Backdrop.js","styles/Section.js","Contact.js","About.js","App.js","serviceWorker.js","index.js"],"names":["Wrapper","styled","div","Backdrop","Title","h1","Slogan","p","Home","isBrowser","window","getScrollPosition","element","useWindow","x","y","position","current","document","body","getBoundingClientRect","scrollX","scrollY","left","top","Text","props","color","header","css","main","title","collapsed","scrolled","Logo","img","Nav","Frame","Tab","selected","StyledLink","Link","MenuToggle","CollapsableWrapper","Header","useState","headerOn","setHeader","setCollapsed","setScrolled","handleHeaderChange","selection","headerSelected","home","onClick","to","contact","about","headers","i","length","effect","deps","wait","useRef","throttleTimeout","callBack","currPos","prevPos","useLayoutEffect","handleScroll","setTimeout","addEventListener","removeEventListener","useScrollPosition","src","backgroundColor","linearGradient","Section","margin","padding","xLarge","large","small","Main","StyledSection","exampleText","Contact","id","TextSection","About","AppWrapper","MainWrapper","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"ihCAGA,IAAMA,EAAUC,IAAOC,IAAV,KACPC,EAAWF,IAAOC,IAAV,KASRE,EAAQH,IAAOI,GAAV,KAQLC,EAASL,IAAOM,EAAV,KAuBGC,MAZf,WACE,OACE,kBAACR,EAAD,KACE,kBAACG,EAAD,MACA,kBAACG,EAAD,yEAGA,kBAACF,EAAD,c,OCrCAK,EAAY,qBAAOC,OAEzB,SAASC,EAAT,GAAoD,IAAvBC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,UACpC,IAAKJ,EAAW,MAAO,CAAEK,EAAG,EAAGC,EAAG,GAElC,IACMC,GADSJ,EAAUA,EAAQK,QAAUC,SAASC,MAC5BC,wBAExB,OAAOP,EACH,CAAEC,EAAGJ,OAAOW,QAASN,EAAGL,OAAOY,SAC/B,CAAER,EAAGE,EAASO,KAAMR,EAAGC,EAASQ,K,u6BCTtC,IAiCeC,EAjCFxB,IAAOM,EAAV,KAIC,SAAAmB,GAAK,OAAIA,EAAMC,SACtB,SAAAD,GAAK,OACJA,EAAME,QACLC,YADD,MAaAH,EAAMI,MACLD,YADD,MAMAH,EAAMK,OACLF,YADD,Q,+0ECtBL,IAAM7B,EAAUC,IAAOC,IAAV,KAIQ,SAAAwB,GAAK,OACtBA,EAAMM,UAAY,gBAAkB,iBAMpC,SAAAN,GAAK,OACLA,EAAMO,UACNJ,YADA,QAQEK,EAAOjC,IAAOkC,IAAV,KAMJC,EAAMnC,IAAOC,IAAV,KAUHmC,EAAQpC,IAAOC,IAAV,KAsBLoC,GANarC,IAAOC,IAAV,KAMJD,IAAOC,IAAV,KAWL,SAAAwB,GAAK,OAAIA,EAAMM,YAAcN,EAAMa,aAQjCC,EAAavC,YAAOwC,WAAPxC,CAAH,KAMVyC,EAAazC,IAAOC,IAAV,KAeVyC,EAAqB1C,IAAOC,IAAV,KAKpB,SAAAwB,GAAK,OACLA,EAAMM,WACNH,YADA,QA2FWe,MArFf,WAAmB,IAAD,EACcC,mBAAS,GADvB,mBACTC,EADS,KACCC,EADD,OAEkBF,oBAAS,GAF3B,mBAETb,EAFS,KAEEgB,EAFF,OAGgBH,oBAAS,GAHzB,mBAGTZ,EAHS,KAGCgB,EAHD,KAKVC,EAAqB,SAAAC,GACpBnB,GACHgB,GAAa,GAGE,GAAbG,GACFH,GAAa,GAGfD,EAAUI,IAGNC,EAAiB,WA8BrB,IA7BA,IAAMC,EACJ,kBAACb,EAAD,CAAYc,QAAS,kBAAMJ,EAAmB,IAAIK,GAAG,SACnD,kBAACjB,EAAD,KACE,kBAAC,EAAD,CAAMV,QAAM,EAACD,MAAO,WAApB,UAMA6B,EACJ,kBAAChB,EAAD,CAAYc,QAAS,kBAAMJ,EAAmB,IAAIK,GAAG,aACnD,kBAACjB,EAAD,KACE,kBAAC,EAAD,CAAMV,QAAM,EAACD,MAAO,WAApB,aAMA8B,EACJ,kBAACjB,EAAD,CAAYc,QAAS,kBAAMJ,EAAmB,IAAIK,GAAG,WACnD,kBAACjB,EAAD,KACE,kBAAC,EAAD,CAAMV,QAAM,EAACD,MAAO,WAApB,WAOA+B,EAAU,CAACL,EAAMG,EAASC,GACvBE,EAAI,EAAGA,EAAID,EAAQE,OAAQD,IAClC,OAAgB,GAAZb,EACK,CAACO,EAAMG,EAASC,GACXC,EAAQZ,IAY1B,OFnKK,SAA2Be,EAAQC,EAAMlD,EAASC,EAAWkD,GAClE,IAAM/C,EAAWgD,iBAAOrD,EAAkB,CAAEE,eAExCoD,EAAkB,KAEhBC,EAAW,WACf,IAAMC,EAAUxD,EAAkB,CAAEC,UAASC,cAC7CgD,EAAO,CAAEO,QAASpD,EAASC,QAASkD,YACpCnD,EAASC,QAAUkD,EACnBF,EAAkB,MAGpBI,2BAAgB,WACd,IAAMC,EAAe,WACfP,EACsB,OAApBE,IACFA,EAAkBM,WAAWL,EAAUH,IAGzCG,KAMJ,OAFAxD,OAAO8D,iBAAiB,SAAUF,GAE3B,kBAAM5D,OAAO+D,oBAAoB,SAAUH,MACjDR,GEiIHY,EAAkB,YAA0B,EAAvBN,QAAuB,EAAdD,QAChBpD,GAAK,GACfkC,GAAY,GAEZA,GAAY,MAKd,kBAAC,EAAD,CAAShB,SAAUA,EAAUD,UAAWA,GACtC,kBAAC,WAAD,CAAMsB,QAAS,kBAAMJ,EAAmB,IAAIK,GAAG,SAC7C,kBAAClB,EAAD,KACE,kBAACH,EAAD,CAAMyC,IAAI,kBAGd,kBAACvC,EAAD,KACGJ,EACC,CACEoB,IACA,kBAACV,EAAD,CAAYY,QAAS,kBAAMJ,EAAmB,OAGhD,kBAACP,EAAD,CAAoBX,UAAWA,GAC5BoB,Q,mMC7Lb,IAQejD,EAREF,IAAOC,IAAV,KACU,SAAAwB,GAAK,OAAIA,EAAMkD,mBACJ,SAAAlD,GAAK,OAAIA,EAAMmD,kB,oqBCHlD,IAsCeC,EAtCC7E,IAAOC,IAAV,KAIS,SAAAwB,GAAK,OAAIA,EAAMkD,mBACzB,SAAAlD,GAAK,OAAIA,EAAMqD,UACd,SAAArD,GAAK,OAAIA,EAAMsD,WAExB,SAAAtD,GAAK,OACJA,EAAMuD,QACLpD,YADD,MAKAH,EAAMwD,OACLrD,YADD,MAOAH,EAAMyD,OACLtD,YADD,Q,2kBClBL,IAAM7B,GAAUC,IAAOC,IAAV,MAMa,SAAAwB,GAAK,OAAIA,EAAMS,OAMnC/B,GAAQH,YAAOwB,EAAPxB,CAAH,MAGLmF,GAAOnF,YAAOwB,EAAPxB,CAAH,MAGJoF,GAAgBpF,YAAO6E,EAAP7E,CAAH,MAKbqF,GAAW,gmBAuCFC,OA/Bf,WACE,OACE,kBAAC,GAAD,CAASpD,IAAK,0BAA2BqD,GAAG,WACxC,kBAAC,EAAD,CAASN,OAAK,EAACH,OAAQ,cAAeH,gBAAiB,WACrD,kBAAC,GAAD,CAAO7C,OAAK,EAACJ,MAAO,SAApB,wBAGA,kBAACyD,GAAD,CAAMtD,MAAI,EAACH,MAAO,SACf2D,KAGL,kBAACD,GAAD,CAAeT,gBAAiB,uBAC9B,kBAACQ,GAAD,CAAMtD,MAAI,EAACH,MAAO,WACf2D,IAEH,kBAAC,GAAD,CAAOvD,OAAK,EAACJ,MAAO,WAApB,yBAIJ,kBAAC0D,GAAD,CAAeJ,QAAM,EAACL,gBAAiB,uBACrC,kBAACQ,GAAD,CAAMtD,MAAI,EAACH,MAAO,WACf2D,IAEH,kBAAC,GAAD,CAAOvD,OAAK,EAACJ,MAAO,WAApB,2B,wNCtDR,IAAM3B,GAAUC,IAAOC,IAAV,MAKPuF,GAAcxF,YAAO6E,EAAP7E,CAAH,MAKXqF,GAAW,gmBAuBFI,OAff,WACE,OACE,kBAAC,GAAD,CAASF,GAAG,SACV,kBAAC,EAAD,CAAUX,eAAgB,gBACxB,kBAACY,GAAD,CAAaP,OAAK,GAChB,kBAAC,EAAD,CAAMnD,OAAK,GAAX,wBAEA,kBAAC,EAAD,CAAMD,MAAI,GAAEwD,KAEd,kBAAC,EAAD,CAASH,OAAK,EAACP,gBAAiB,Y,+NCxBxC,IAAMe,GAAa1F,IAAOC,IAAV,MACV0F,GAAc3F,IAAOC,IAAV,MAuBF2F,OAhBf,WACE,OACE,kBAAC,iBAAD,KACE,kBAACF,GAAD,CAAYH,GAAG,OACb,kBAAC,EAAD,MAEA,kBAAC,EAAD,MACA,kBAACI,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,UCdUE,QACW,cAA7BpF,OAAOqF,SAASC,UAEe,UAA7BtF,OAAOqF,SAASC,UAEhBtF,OAAOqF,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASjF,SAASkF,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.2997524f.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div``;\r\nconst Backdrop = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  background: linear-gradient(black, transparent);\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  z-index: -1;\r\n`;\r\nconst Title = styled.h1`\r\n  color: #e6ffff;\r\n  text-align: center;\r\n  -webkit-text-stroke: 3px #ff006c;\r\n  font-size: 10rem;\r\n  font-family: 'Roboto', sans-serif;\r\n  font-weight: 900;\r\n`;\r\nconst Slogan = styled.p`\r\n    color:#e6ffff;\r\n    text-align: center;\r\n    margin:15% 10% 0% 10%;\r\n    font-size: 6vw;\r\n    font-family: 'Roboto', sans-serif;\r\n    text-shadow: black 0px 0px 10px;\r\n    \r\n\r\n`;\r\n\r\nfunction Home() {\r\n  return (\r\n    <Wrapper>\r\n      <Backdrop />\r\n      <Slogan>\r\n        Powering Athletes to Jump Higher, Run Faster, and Throw Farther.\r\n      </Slogan>\r\n      <Title>SHE</Title>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { useRef, useLayoutEffect } from \"react\";\r\n\r\nconst isBrowser = typeof window !== `undefined`;\r\n\r\nfunction getScrollPosition({ element, useWindow }) {\r\n  if (!isBrowser) return { x: 0, y: 0 };\r\n\r\n  const target = element ? element.current : document.body;\r\n  const position = target.getBoundingClientRect();\r\n\r\n  return useWindow\r\n    ? { x: window.scrollX, y: window.scrollY }\r\n    : { x: position.left, y: position.top };\r\n}\r\n\r\nexport function useScrollPosition(effect, deps, element, useWindow, wait) {\r\n  const position = useRef(getScrollPosition({ useWindow }));\r\n\r\n  let throttleTimeout = null;\r\n\r\n  const callBack = () => {\r\n    const currPos = getScrollPosition({ element, useWindow });\r\n    effect({ prevPos: position.current, currPos });\r\n    position.current = currPos;\r\n    throttleTimeout = null;\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    const handleScroll = () => {\r\n      if (wait) {\r\n        if (throttleTimeout === null) {\r\n          throttleTimeout = setTimeout(callBack, wait);\r\n        }\r\n      } else {\r\n        callBack();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, deps);\r\n}\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst Text = styled.p`\r\n  text-decoration: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  color: ${props => props.color};\r\n  ${props =>\r\n    (props.header &&\r\n      css`\r\n        font-weight: 800;\r\n        font-size: 2.5vw;\r\n        font-family: Roboto, sans-serif;\r\n        -webkit-user-select: none; /* Chrome all / Safari all */\r\n        -moz-user-select: none; /* Firefox all */\r\n        -ms-user-select: none; /* IE 10+ */\r\n        user-select: none;\r\n        @media (max-width: 768px) {\r\n          font-size: 5vw;\r\n        }\r\n      `) ||\r\n    (props.main &&\r\n      css`\r\n        font-size: 12px;\r\n        font-size: 1.5vw;\r\n        font-family: \"Roboto\", sans-serif;\r\n      `) ||\r\n    (props.title &&\r\n      css`\r\n        font-size: 20px;\r\n        font-size: 2.5vw;\r\n        font-family: \"Roboto\", sans-serif;\r\n      `)};\r\n`;\r\n\r\nexport default Text;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useScrollPosition } from './hooks/useScrollPosition';\r\nimport styled, { css } from 'styled-components';\r\nimport Text from './styles/Text';\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\n\r\nconst Wrapper = styled.div`\r\n  transition: all 0.8s cubic-bezier(0.2, 0.8, 0.2, 1) 0s;\r\n  display: flex;\r\n  height: 5vw;\r\n  justify-content: ${props =>\r\n    props.collapsed ? 'space-between' : ' flex-start'};\r\n  min-height: 3rem;\r\n  top: 0;\r\n  position: sticky;\r\n  z-index: 100;\r\n\r\n  ${props =>\r\n    props.scrolled &&\r\n    css`\r\n      backdrop-filter: blur(20px);\r\n      background: rgba(0, 0, 0, 0.8);\r\n      padding: 1rem 0px;\r\n    `}\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  display: block;\r\n  width: auto;\r\n  height: 90%;\r\n  max-width: 90%;\r\n`;\r\nconst Nav = styled.div`\r\n  transition: all 0.2s ease-in-out;\r\n  margin: 0;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n  width: 100%;\r\n`;\r\n\r\nconst Frame = styled.div`\r\n  transition: all .2s ease-in-out;\r\n  top: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  height:100%;\r\n  width: 10vw;\r\n  margin-left: 1%;\r\n  background:linear-gradient(#ff006c, #ff4);\r\n  justify-content: center;\r\n\r\n  &:hover {\r\n    height:150%\r\n  }\r\n`;\r\n\r\nconst ButtonLine = styled.div`\r\n  border-left: 1px solid rgb(256, 256, 256);\r\n  height: 100%;\r\n  transition: all 0.2s ease-in-out;\r\n`;\r\n\r\nconst Tab = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: all 0.2s ease-in-out;\r\n  flex: 1;\r\n  padding-left: 1em;\r\n  padding-right: 1em;\r\n  height: 100%;\r\n  min-width: 50px;\r\n\r\n  ${props => props.collapsed && !props.selected}\r\n\r\n  &:hover {\r\n    background-color: rgba(256, 256, 256, 0.7);\r\n    height: 150%;\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst MenuToggle = styled.div`\r\n  transition: all 0.2s ease-in-out;\r\n  top: 0;\r\n  right: 0;\r\n  display: flex;\r\n  height: 100%;\r\n  width: 10vw;\r\n  margin-right: 1%;\r\n  background: linear-gradient(#ff006c, #ff4);\r\n\r\n  &:hover {\r\n    width: 150%;\r\n  }\r\n`;\r\n\r\nconst CollapsableWrapper = styled.div`\r\n  transition: all 0.2s ease-in-out;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  ${props =>\r\n    props.collapsed &&\r\n    css`\r\n    max-width:0px;\r\n    overflow:hidden:`}\r\n`;\r\n\r\nfunction Header() {\r\n  const [headerOn, setHeader] = useState(0);\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const [scrolled, setScrolled] = useState(false);\r\n\r\n  const handleHeaderChange = selection => {\r\n    if (!collapsed) {\r\n      setCollapsed(true);\r\n    }\r\n\r\n    if (selection == 0) {\r\n      setCollapsed(false);\r\n    }\r\n\r\n    setHeader(selection);\r\n  };\r\n\r\n  const headerSelected = () => {\r\n    const home = (\r\n      <StyledLink onClick={() => handleHeaderChange(0)} to=\"/#top\">\r\n        <Tab>\r\n          <Text header color={'#e6ffff'}>\r\n            Home\r\n          </Text>\r\n        </Tab>\r\n      </StyledLink>\r\n    );\r\n    const contact = (\r\n      <StyledLink onClick={() => handleHeaderChange(1)} to=\"/#contact\">\r\n        <Tab>\r\n          <Text header color={'#e6ffff'}>\r\n            Contact\r\n          </Text>\r\n        </Tab>\r\n      </StyledLink>\r\n    );\r\n    const about = (\r\n      <StyledLink onClick={() => handleHeaderChange(2)} to=\"/#about\">\r\n        <Tab>\r\n          <Text header color={'#e6ffff'}>\r\n            About\r\n          </Text>\r\n        </Tab>\r\n      </StyledLink>\r\n    );\r\n\r\n    const headers = [home, contact, about];\r\n    for (let i = 0; i < headers.length; i++) {\r\n      if (headerOn == 0) {\r\n        return [home, contact, about];\r\n      } else return headers[headerOn];\r\n    }\r\n  };\r\n\r\n  useScrollPosition(({ prevPos, currPos }) => {\r\n    if (currPos.y < -50) {\r\n      setScrolled(true);\r\n    } else {\r\n      setScrolled(false);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Wrapper scrolled={scrolled} collapsed={collapsed}>\r\n      <Link onClick={() => handleHeaderChange(0)} to=\"/#top\">\r\n        <Frame>\r\n          <Logo src=\"logo180.png\" />\r\n        </Frame>\r\n      </Link>\r\n      <Nav>\r\n        {collapsed ? (\r\n          [\r\n            headerSelected(),\r\n            <MenuToggle onClick={() => handleHeaderChange(0)} />\r\n          ]\r\n        ) : (\r\n          <CollapsableWrapper collapsed={collapsed}>\r\n            {headerSelected()}\r\n          </CollapsableWrapper>\r\n        )}\r\n      </Nav>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst Backdrop = styled.div`\r\n    background-color: ${props => props.backgroundColor};\r\n    background:  linear-gradient(${props => props.linearGradient});\r\n    width: 100%;\r\n    height: 100%;\r\n    display:flex;\r\n`;\r\n\r\nexport default Backdrop;","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst Section = styled.div`\r\n  width: 35%;\r\n  height: auto;\r\n  max-width: 450px;\r\n  background-color: ${props => props.backgroundColor};\r\n  margin: ${props => props.margin};\r\n  padding: ${props => props.padding};\r\n  z-index: 1;\r\n  ${props =>\r\n    (props.xLarge &&\r\n      css`\r\n        width: 75%;\r\n        height: auto;\r\n      `) ||\r\n    (props.large &&\r\n      css`\r\n        width: 50%;\r\n        height: auto;\r\n        max-width: 500px;\r\n        min-width: 150px;\r\n      `) ||\r\n    (props.small &&\r\n      css`\r\n        width: 30%;\r\n        height: auto;\r\n        max-width: 500px;\r\n        min-width: 75px;\r\n      `)};\r\n`;\r\n\r\nconst exampleText = `Lorem Ipsum is simply dummy text of the printing and typesetting industry.\r\n   Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, \r\n   when an unknown printer took a galley of type and scrambled it to make a type specimen book. \r\n   It has survived not only five centuries, but also the leap into electronic typesetting,\r\n    remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets \r\n    containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker \r\n    including versions of Lorem Ipsum.`;\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Backdrop from './styles/Backdrop';\r\nimport Section from './styles/Section';\r\nimport Text from './styles/Text';\r\n\r\nconst Wrapper = styled.div`\r\n  height: auto;\r\n  width: 70vw;\r\n  display: flex;\r\n  background-attachment: fixed;\r\n  background-size: cover;\r\n  background-image: url(${props => props.img});\r\n  padding-bottom: 5%;\r\n  justify-content: center;\r\n  flex-wrap:wrap;\r\n  \r\n`;\r\nconst Title = styled(Text)`\r\n  margin: 1rem;\r\n`;\r\nconst Main = styled(Text)`\r\n  margin: 1rem;\r\n`;\r\nconst StyledSection = styled(Section)`\r\n  border: 5vw solid #e6ffff;\r\n  z-index: 0;\r\n`;\r\n\r\nconst exampleText = `Lorem Ipsum is simply dummy text of the printing and typesetting industry.\r\n   Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, \r\n   when an unknown printer took a galley of type and scrambled it to make a type specimen book. \r\n   It has survived not only five centuries, but also the leap into electronic typesetting,\r\n    remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets \r\n    containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker \r\n    including versions of Lorem Ipsum.`;\r\n\r\nfunction Contact() {\r\n  return (\r\n    <Wrapper img={'./images/scoreboard.jpg'} id=\"contact\">\r\n        <Section large margin={'0 -2rem 0 0'} backgroundColor={'#e6ffff'}>\r\n          <Title title color={'black'}>\r\n            What is Lorem Ipsum?\r\n          </Title>\r\n          <Main main color={'black'}>\r\n            {exampleText}\r\n          </Main>\r\n        </Section>\r\n        <StyledSection backgroundColor={'rgba(208,0,108,0.7)'}>\r\n          <Main main color={'#e6ffff'}>\r\n            {exampleText}\r\n          </Main>\r\n          <Title title color={'#e6ffff'}>\r\n            What is Lorem Ipsum?\r\n          </Title>\r\n        </StyledSection>\r\n      <StyledSection xLarge backgroundColor={'rgba(208,0,108,0.7)'}>\r\n        <Main main color={'#e6ffff'}>\r\n          {exampleText}\r\n        </Main>\r\n        <Title title color={'#e6ffff'}>\r\n          What is Lorem Ipsum?\r\n        </Title>\r\n      </StyledSection>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Backdrop from \"./styles/Backdrop\";\r\nimport Section from \"./styles/Section\";\r\nimport Text from \"./styles/Text\";\r\n\r\nconst Wrapper = styled.div`\r\n    height:100vh;\r\n    width:80%;\r\n   \r\n`;\r\nconst TextSection = styled(Section)`\r\n  background-color: #e6ffff;\r\n`;\r\n\r\n\r\nconst exampleText = `Lorem Ipsum is simply dummy text of the printing and typesetting industry.\r\n   Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, \r\n   when an unknown printer took a galley of type and scrambled it to make a type specimen book. \r\n   It has survived not only five centuries, but also the leap into electronic typesetting,\r\n    remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets \r\n    containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker \r\n    including versions of Lorem Ipsum.`;\r\n\r\nfunction About() {\r\n  return (\r\n    <Wrapper id=\"about\">\r\n      <Backdrop linearGradient={\"#ff006c,#ff4\"}>\r\n        <TextSection large>\r\n          <Text title>What is Lorem Ipsum?</Text>\r\n\r\n          <Text main>{exampleText}</Text>\r\n        </TextSection>\r\n        <Section small backgroundColor={\"#ff4\"}></Section>\r\n      </Backdrop>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Home from \"./Home\";\r\nimport Header from \"./Header\";\r\nimport Contact from \"./Contact\";\r\nimport About from \"./About\";\r\nimport Section from \"./styles/Section\"\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nconst AppWrapper = styled.div``;\r\nconst MainWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <AppWrapper id=\"top\">\r\n        <Header />\r\n\r\n        <Home />\r\n        <MainWrapper>\r\n          <Contact />\r\n          <About />\r\n        </MainWrapper>\r\n      </AppWrapper>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// register allows for quicker loads, but removes ability to hot load updates\r\n//change to unregister to switch\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}